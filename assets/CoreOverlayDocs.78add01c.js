import{f as t,ab as d,o as f,c as u,z as k,j as v,m,aj as S,t as g}from"./index.582e0ce8.js";import{G as P}from"./GithubSource.41fdda6d.js";import{a as T,O as j}from"./Overlay.5a14e91e.js";import"./mergeOptionsWithPopperConfig.995d96af.js";const E=g('<div class="row gy-4"><div><h2>Overlays (core)</h2><p class="lead">A powerful and flexible overlay component for showing things over, and next to, other things.</p><p>This example is styled to look like a tooltip (with an adaptive arrow). It also demonstates using an optional <code>&lt;Transition /></code>.</p><p>Click the button to cycle through placement options.</p></div><div class="d-flex justify-content-center"><button class="btn btn-primary">I am an overlay target</button></div><div></div></div>'),I=g('<div class="tooltip bs-tooltip-auto show"><div class="tooltip-arrow"></div><div class="tooltip-inner">I am a overlay!</div></div>'),h=["top","right","bottom","left"],z=()=>{const[y,w]=t(),[C,b]=t(null),[r,l]=t(!1),[e,n]=t();function $(){r()?e()==="left"?l(!1):n(h[h.indexOf(e())+1]):(n("top"),l(!0))}return(()=>{const o=E.cloneNode(!0),s=o.firstChild,x=s.firstChild,i=s.nextSibling,c=i.firstChild,_=i.nextSibling;return d(b,o),f(s,u(P,{name:"CoreOverlayDocs"}),x),c.$$click=$,d(w,c),f(_,u(T,{get show(){return r()},offset:[0,5],container:C,target:y,get placement(){return e()},flip:!0,children:()=>{const p=k(j);return(()=>{const a=I.cloneNode(!0),O=a.firstChild;return v(a,m(()=>p?.wrapperProps),!1,!0),v(O,m(()=>p?.arrowProps),!1,!1),a})()}})),o})()};S(["click"]);export{z as CoreOverlayDocs,z as default};
